AWSTemplateFormatVersion: "2010-09-09"
# Version 1.0 - Initial version
Description: Template to create IAM users. Version 1.0

Parameters:
  UserName:
    Type: String
  ConsoleAccess:
    Type: String
    AllowedValues:
      - True
      - False
    Default: False
  Password:
    Description: Password is required if account has Console access
    Type: String
    NoEcho: True
  Email:
    Type: String
  ManagedPolicyArns:
    Description: Comma-separated list of IAM Policy ARNs
    Type: String
    Default: ""
  Serial:
    Description: Increment this number by one to rotate the user's IAM Access Key
    Type: String
    Default: 1

Conditions:
  HasAdditionalPolicies: !Not [ !Equals [ !Ref ManagedPolicyArns, "" ] ]
  HasConsoleAccess: !Equals [ !Ref ConsoleAccess, true ]
  HasNoConsoleAccess: !Not [ !Equals [ !Ref ConsoleAccess, true ] ]

Resources:
  IAMConsoleUser:
    Type: AWS::IAM::User
    Condition: HasConsoleAccess
    Properties:
      UserName: !Join ["-", [ iam-user, !Ref UserName ] ]
      LoginProfile:
          Password: !Ref Password
      ManagedPolicyArns:
        !If
          - HasAdditionalPolicies
          - !Split
            - ','
            - !Join
              - ','
              - - !ImportValue iam-policy-enforce-mfa
                - !Ref ManagedPolicyArns
          - - !ImportValue iam-policy-enforce-mfa
      Tags:
        - Key: ised-contact-email
          Value: !Ref Email
        - Key: ised-stack-id
          Value: !Ref "AWS::StackId"

  IAMUser:
    Type: AWS::IAM::User
    Condition: HasNoConsoleAccess
    Properties:
      UserName: !Join ["-", [ iam-user, !Ref UserName ] ]
      ManagedPolicyArns:
        !If
          - HasAdditionalPolicies
          - !Split
            - ','
            - !Join
              - ','
              - - !ImportValue iam-policy-enforce-mfa
                - !Ref ManagedPolicyArns
          - - !ImportValue iam-policy-enforce-mfa
      Tags:
        - Key: ised-contact-email
          Value: !Ref Email
        - Key: ised-stack-id
          Value: !Ref "AWS::StackId"

  IAMAccessKey:
    Type: AWS::IAM::AccessKey
    Condition: HasNoConsoleAccess
    Properties:
      Serial: !Ref Serial
      UserName: !If [ HasConsoleAccess, !Ref IAMConsoleUser, !Ref IAMUser ]

  IAMSecretKey:
    Type: AWS::SecretsManager::Secret
    Condition: HasNoConsoleAccess
    Properties:
      Name: !If [ HasConsoleAccess, !Ref IAMConsoleUser, !Ref IAMUser ]
      Description: IAM User Secret Key
      SecretString: !Sub '{"accesskey": "${IAMAccessKey}", "secretkey": "${IAMAccessKey.SecretAccessKey}"}'

Outputs:
  IAMUser:
    Value: !If [ HasConsoleAccess, !Ref IAMConsoleUser, !Ref IAMUser ]
