AWSTemplateFormatVersion: "2010-09-09"
# Sb - test - pipeline
# Sb - test - pipeline 2
# Version 1.0 - Initial version, includes Cost tag, Backup Tag
# Version 1.1 - Fixing initial template
# Version 1.2 - Add Mandatory Tags for patching
# Version 1.3 - Add Jira Automation
# Version 1.3.1 - Fix error in patching rule definition
# Version 1.3.2 - Remove noEcho from Jira Password
# Version 1.3.3 - Remove Network Interface from Cost Rule
# Version 1.3.4 - Remove Route Table, Security Group and Network Acl from Cost Rule
# Version 1.3.5 - Remove Cost Rule from ApiStore, OpenShift, Students, Sandbox Increase the number of retries for jira to 10
# Version 1.3.6 - Remove Patching From OpenShift Account
# Version 1.3.7 - Fixing auto remediation on/off
# Version 1.3.8 - Remove Certificate from Costing config
# Version 1.4 - Add Metadata
# Version 1.5 - Added Remediation SSM document and CreateJiraIssue lambda function. Moved the remediation Configuration to an external template 'RemediationConfig.yaml'
# Version 1.5.1 - Moved all roles within this CF to the Roles CF script. Added a list of tags that was already applied to the jira ticket. 
# Version 1.6 - Switch the parameter that contain sensitive info to use value from SSM Parameter store and enable Auto remediation for patching. 
Description: Template to create all required config rules. Version 1.6
Metadata:
 AWS::CloudFormation::Interface:
   ParameterGroups:
     - Label:
         default: "Jira"
       Parameters:
         - IsedJiraUrl
         - IsedJiraUserName
         - IsedJiraProject
         - IsedJiraPassword
     - Label:
         default: "The SSM Parameter Name"
       Parameters:
         - SSMParamName
     - Label:
         default: "Costing"
       Parameters:
         - CostTagConfigRuleName
         - IsedCostCentre
         - IsedEnvironment
         - IsedProjectId
     - Label:
         default: "Backup"
       Parameters:
         - BackupTagConfigRuleName
         - IsedBackup
     - Label:
         default: "Patch"
       Parameters:
         - PatchingTagConfigRuleName
         - IsedPatch
     - Label:
         default: "Remediation Configuration Template URL"
       Parameters:
         - RemediationConfigTemplate         
     - Label:
         default: "Account info"
       Parameters:
          - SandboxAccountID
          - SandboxDBAccountID
          - APIStoreAccountID
          - StudentsAccountID
          - OpenShiftAccountID




Conditions:
  IsRemediationOn: !And [!Not [!Equals [ !Ref "AWS::AccountId", !Ref SandboxAccountID ]], !Not [!Equals [ !Ref "AWS::AccountId", !Ref SandboxDBAccountID ]]]
  IsCostRuleOn: !And [!Not [!Equals [ !Ref "AWS::AccountId", !Ref APIStoreAccountID ]] , !Not [!Equals [ !Ref "AWS::AccountId", !Ref OpenShiftAccountID ]], !Not [!Equals [ !Ref "AWS::AccountId", !Ref StudentsAccountID ]]]
  IsPatchingRuleOn: !Not [!Equals [ !Ref "AWS::AccountId", !Ref OpenShiftAccountID ]]
Parameters:
  IsedCostCentre:
    Type: String
  IsedProjectId:
    Type: String
  IsedEnvironment:
    Type: String
  IsedBackup:
    Type: String
  IsedPatch:
    Type: String
  IsedJiraProject:
    Type: AWS::SSM::Parameter::Value<String>
    Default: JiraProject
  IsedJiraURL:
    Type: AWS::SSM::Parameter::Value<String>
    Default: JiraURL 
  IsedJiraUser:
    Type: AWS::SSM::Parameter::Value<String>
    Default: JiraUser     
  SSMParamName:
    Type: String
    Default: ised-jira-password
  CostTagConfigRuleName:
    Type: String
    Default: ised-mandatory-tags-cost
  BackupTagConfigRuleName:
    Type: String
    Default: ised-mandatory-tags-backup
  PatchingTagConfigRuleName:
    Type: String
    Default: ised-mandatory-tags-patching
  SandboxAccountID:
    Type: AWS::SSM::Parameter::Value<String>
    Default: AccountIDSandbox
  SandboxDBAccountID:
    Type: AWS::SSM::Parameter::Value<String>
    Default: AccountIDSandboxDB    
  APIStoreAccountID:
    Type: AWS::SSM::Parameter::Value<String>
    Default: AccountIDAPIStore
  StudentsAccountID:
    Type: AWS::SSM::Parameter::Value<String>
    Default: AccountIDStudents   
  OpenShiftAccountID:
    Type: AWS::SSM::Parameter::Value<String>
    Default: AccountIDOpenShift       
  S3Templates:
    Type: AWS::SSM::Parameter::Value<String>
    Default: S3Templates 
Resources:
  AWSConfigRuleTagsCost:
    Type: AWS::Config::ConfigRule
    Condition: IsCostRuleOn
    Properties:
      ConfigRuleName: !Ref CostTagConfigRuleName
      Description: Checks whether your resources have the tags that you specify.
      InputParameters:
        tag1Key: ised-cost-centre
        tag1Value: !Ref IsedCostCentre
        tag2Key: ised-project-id
        tag2Value: !Ref IsedProjectId
        tag3Key: ised-environment
        tag3Value: !Ref IsedEnvironment
      Scope:
        ComplianceResourceTypes:
        - AWS::ACM::Certificate
        - AWS::AutoScaling::AutoScalingGroup
        # - AWS::CloudFormation::Stack
        # - AWS::CodeBuild::Project
        - AWS::DynamoDB::Table
        - AWS::EC2::CustomerGateway
        - AWS::EC2::Instance
        - AWS::EC2::InternetGateway
        # - AWS::EC2::NetworkAcl
        # - AWS::EC2::NetworkInterface
        # - AWS::EC2::RouteTable
        # - AWS::EC2::SecurityGroup
        - AWS::EC2::Subnet
        - AWS::EC2::Volume
        - AWS::EC2::VPC
        - AWS::EC2::VPNConnection
        - AWS::EC2::VPNGateway
        - AWS::ElasticLoadBalancing::LoadBalancer
        - AWS::ElasticLoadBalancingV2::LoadBalancer
        - AWS::RDS::DBInstance
        - AWS::RDS::DBSecurityGroup
        - AWS::RDS::DBSnapshot
        - AWS::RDS::DBSubnetGroup
        - AWS::RDS::EventSubscription
        - AWS::Redshift::Cluster
        - AWS::Redshift::ClusterParameterGroup
        - AWS::Redshift::ClusterSecurityGroup
        - AWS::Redshift::ClusterSnapshot
        - AWS::Redshift::ClusterSubnetGroup
        - AWS::S3::Bucket
      Source:
        Owner: AWS
        SourceIdentifier: REQUIRED_TAGS
  AWSConfigRuleTagsBackup:
    Type: AWS::Config::ConfigRule
    Properties:
      ConfigRuleName: !Ref BackupTagConfigRuleName
      Description: Checks whether your resources have the tags that you specify.
      InputParameters:
        tag1Key: ised-backup
        tag1Value: !Ref IsedBackup
      Scope:
        ComplianceResourceTypes:
        - AWS::EC2::Volume
        - AWS::RDS::DBInstance
      Source:
        Owner: AWS
        SourceIdentifier: REQUIRED_TAGS
  AWSConfigRuleTagsPatching:
    Type: AWS::Config::ConfigRule
    Condition: IsPatchingRuleOn
    Properties:
      ConfigRuleName: !Ref PatchingTagConfigRuleName
      Description: Checks whether your resources have the tags that you specify.
      InputParameters:
        tag1Key: Patch Group
        tag1Value: !Ref IsedPatch
      Scope:
        ComplianceResourceTypes:
        - AWS::EC2::Instance
      Source:
        Owner: AWS
        SourceIdentifier: REQUIRED_TAGS

  CreateJiraIssue:
    Properties:
      Code: {ZipFile: "#\n# Copyright 2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n#\n# Permission is hereby granted, free of charge, to any person obtaining a copy of this\n# software and associated documentation files (the \"Software\"), to deal in the Software\n# without restriction, including without limitation the rights to use, copy, modify,\n# merge, publish, distribute, sublicense, and/or sell copies of the Software, and to\n# permit persons to whom the Software is furnished to do so.\n#\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n# INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n# PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n# HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n# OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n# SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n#\nimport boto3\nimport json\nfrom botocore.vendored import requests\n\ndef add_priority(issue, priority):\n\tfields = issue[\"fields\"]\n\tfields[\"priority\"] = {\"name\": priority}\n\ndef add_assignee(issue, assignee):\n\tfields = issue[\"fields\"]\n\tfields[\"assignee\"] = {\"name\": assignee}\n\ndef add_due_date(issue, due_date):\n\tfields = issue[\"fields\"]\n\tfields[\"duedate\"] = due_date\n\ndef lookup(rid):\n    def lookup_for_tags(token):\n    \tclientResourceGroupTag = boto3.client('resourcegroupstaggingapi')\n        response = clientResourceGroupTag.get_resources(\n            PaginationToken=token,\n            ResourcesPerPage=100,\n        )\n        return response\n    total_results = []\n    response = lookup_for_tags(\"\")\n    page_token = \"\"\n    resourceInfo = \"\"\n    while True:\n        total_results += response[\"ResourceTagMappingList\"]\n        page_token = response[\"PaginationToken\"]\n        if page_token == \"\":\n            break\n        response = lookup_for_tags(page_token)\n\n    for r in total_results:\n        findResult = r[\"ResourceARN\"].find(rid)\n        if findResult != -1:\n        \tresourceInfo +=  'The resource ARN '+r[\"ResourceARN\"] + '\\n'\n        \tprint resourceInfo\n        \tprint len(r[\"Tags\"])\n        \tresourceInfo += '\\nTags already applied to the resource: \\n'\n        \tfor t in r[\"Tags\"]:\n        \t\tprint t['Key']\n        \t\tprint t['Value']\n        \t\tresourceInfo += 'Key:' + t['Key'] +  '\\t\\tValue:'+t['Value'] + '\\n'\n    return resourceInfo\n\ndef handler(event, context):\n\n\tclient = boto3.client(\"ssm\")\n\n\n\tssm_parameter_name = event[\"SSMParameterName\"].strip()\n\n\tsecret = client.get_parameter(Name=ssm_parameter_name, WithDecryption=True)['Parameter']['Value']\n\n\tusername = event[\"JiraUsername\"].strip()\n\turl = event[\"JiraURL\"].strip()\n\tresourceId = event[\"IssueDescription\"].strip()\n\n\tresourceInfoDescrip = lookup(resourceId)\n\n\tissue = {\n\t\t\"fields\": {\n\t\t\t\"summary\": event[\"IssueSummary\"].strip() + '-' + resourceId,\n\t\t\t\"project\": {\n\t\t\t\t\"key\": event[\"ProjectKey\"].strip()\n\t\t\t},\n\t\t\t#\"description\": event[\"IssueDescription\"].strip(),\n\t\t\t\"description\": resourceInfoDescrip.strip(),\n\t\t\t\"issuetype\": {\n\t\t\t\t\"name\": event[\"IssueTypeName\"].strip()\n\t\t\t}\n\t\t}\n\t}\n\n\tpriority = event[\"PriorityName\"].strip()\n\tif priority:\n\t\tadd_priority(issue, priority)\n\n\tassignee = event[\"AssigneeName\"].strip()\n\tif assignee:\n\t\tadd_assignee(issue, assignee)\n\n\tdue_date = event[\"DueDate\"].strip()\n\tif due_date:\n\t\tadd_due_date(issue, due_date)\n\n\tdata = json.dumps(issue)\n\n\theaders = {'Content-Type':'application/json'}\n\n\tresponse = requests.post('{0}/rest/api/2/issue/'.format(url),\n\t\t\t\t\t\t\t headers=headers,\n\t\t\t\t\t\t\t data=data,\n\t\t\t\t\t\t\t auth=(username, secret))\n\n\tif not response.ok:\n\t\traise Exception(\"Received error with status code \" + str(response.status_code) + \" from Jira\")\n\telse:\n\t\tissue_key = (response.json()[\"key\"])\n\t\treturn {\"IssueKey\": issue_key}"}
      # FunctionName: {Ref: LambdaName}
      FunctionName: Ised-CreateJiraIssue
      Handler: index.handler
      MemorySize: 128
      Role: !ImportValue ConfigLambdaRole
      Runtime: python2.7
      Timeout: 300
    Type: AWS::Lambda::Function

  
  CreateSSMDocumentCreateJiraIssue:
    Type: AWS::SSM::Document
    Properties:
      Content: 
        description: "Automation Document Example JSON Template"
        schemaVersion: "0.3"
        assumeRole: "{{ AutomationAssumeRole }}"
        parameters:
          JiraUsername:
            type: "String"
            description: "(Required) The name of the user the issue will be created with."
          SSMParameterName:
            type: "String"
            description: "(Required) The name of an encrypted SSM Parameter containing the API key or password for the Jira user."
          JiraURL:
            type: "String"
            description: "(Required) The url of the Jira instance."
          ProjectKey:
            type: "String"
            description: "(Required) The key of the project the issue should be created in."
          IssueSummary:
            type: "String"
            description: "(Required) A brief summary of the issue."
          IssueDescription:
            type: "String"
            description: "(Required) A detailed description of the issue."
          IssueTypeName:
            type: "String"
            description: "(Required) The name of the type of issue you want to create (ex. Task, Sub-task, Bug, etc)."
          PriorityName:
            type: "String"
            description: "(Optional) The name of the priority of the issue."
            default: ""
          AssigneeName:
            type: "String"
            description: "(Optional) The username of the person the issue should be assigned to."
            default: ""
          DueDate:
            type: "String"
            description: "(Optional) The due date for the issue in yyyy-mm-dd format."
            default: ""
          LambdaAssumeRole:
            type: "String"
            description: "(Optional) The ARN of the role that allows Lambda created by Automation to perform the actions on your behalf. If not specified a transient role will be created to execute the Lambda function."
            default: ""
          AutomationAssumeRole:
            type: "String"
            description: "(Optional) The ARN of the role that allows Automation to perform\
              \ the actions on your behalf. "
            default: ""
        mainSteps:
        - name: "createJiraIssue"
          action: "aws:invokeLambdaFunction"
          inputs:
            FunctionName: "Ised-CreateJiraIssue"
            Payload: "{\"JiraUsername\": \"{{JiraUsername}}\", \"SSMParameterName\": \"{{SSMParameterName}}\"\
              , \"JiraURL\": \"{{JiraURL}}\", \"ProjectKey\": \"{{ProjectKey}}\", \"IssueSummary\"\
              : \"{{IssueSummary}}\", \"IssueDescription\": \"{{IssueDescription}}\", \"IssueTypeName\"\
              : \"{{IssueTypeName}}\", \"PriorityName\": \"{{PriorityName}}\", \"AssigneeName\"\
              : \"{{AssigneeName}}\", \"DueDate\": \"{{DueDate}}\"}"
        outputs:
        - "createJiraIssue.Payload"
          
      DocumentType: Automation

  BasicRemediationConfigurationTagsCost:
    Type: AWS::CloudFormation::Stack
    Condition: IsCostRuleOn
    Properties:
      TemplateURL: !Join [ '', [!Ref S3Templates, "config-remediation.yaml" ]]
      Parameters:
        AutomationRoleArm: !ImportValue AutomationRole
        ConfigRuleName: !Ref AWSConfigRuleTagsCost
        IsRemediationAutoOn: !If [IsRemediationOn,'true','false']
        IsedJiraProject: !Ref IsedJiraProject
        IsedJiraUrl: !Ref IsedJiraURL
        IsedJiraUserName: !Ref IsedJiraUser
        IsedLambdaRole: !ImportValue ConfigLambdaRole
        SSMDocumentCreateJiraIssue: !Ref CreateSSMDocumentCreateJiraIssue
        JiraSSMParameterName: !Ref SSMParamName

  BasicRemediationConfigurationTagsBackup:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Join [ '', [!Ref S3Templates, "config-remediation.yaml" ]]
      Parameters:
        AutomationRoleArm: !ImportValue AutomationRole
        ConfigRuleName: !Ref AWSConfigRuleTagsBackup
        IsRemediationAutoOn: !If [IsRemediationOn,'true','false']
        IsedJiraProject: !Ref IsedJiraProject
        IsedJiraUrl: !Ref IsedJiraURL
        IsedJiraUserName: !Ref IsedJiraUser
        IsedLambdaRole: !ImportValue ConfigLambdaRole
        SSMDocumentCreateJiraIssue: !Ref CreateSSMDocumentCreateJiraIssue
        JiraSSMParameterName: !Ref SSMParamName
  
  BasicRemediationConfigurationTagsPatching:
    Type: AWS::CloudFormation::Stack
    Condition: IsPatchingRuleOn
    Properties:
      TemplateURL: !Join [ '', [!Ref S3Templates, "config-remediation.yaml" ]]
      Parameters:
        AutomationRoleArm: !ImportValue AutomationRole
        ConfigRuleName: !Ref AWSConfigRuleTagsPatching
        IsRemediationAutoOn: !If [IsRemediationOn,'true','false']
        IsedJiraProject: !Ref IsedJiraProject
        IsedJiraUrl: !Ref IsedJiraURL
        IsedJiraUserName: !Ref IsedJiraUser
        IsedLambdaRole: !ImportValue ConfigLambdaRole
        SSMDocumentCreateJiraIssue: !Ref CreateSSMDocumentCreateJiraIssue
        JiraSSMParameterName: !Ref SSMParamName 
